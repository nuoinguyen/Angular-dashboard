{"ast":null,"code":"/**\n * @license Angular v13.0.2\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { getUrlScheme, syntaxError, Identifiers, JitCompiler, ProviderMeta, CompileReflector, ResourceLoader, JitSummaryResolver, SummaryResolver, Lexer, Parser, HtmlParser, I18NHtmlParser, CompilerConfig, TemplateParser, ElementSchemaRegistry, JitEvaluator, DirectiveNormalizer, UrlResolver, CompileMetadataResolver, NgModuleResolver, DirectiveResolver, PipeResolver, StaticSymbolCache, StyleCompiler, ViewCompiler, NgModuleCompiler, DomElementSchemaRegistry } from '@angular/compiler';\nimport * as i0 from '@angular/core';\nimport { ɵReflectionCapabilities, ɵstringify, ANALYZE_FOR_ENTRY_COMPONENTS, ElementRef, NgModuleRef, ViewContainerRef, ChangeDetectorRef, Renderer2, QueryList, TemplateRef, ɵCodegenComponentFactoryResolver, ComponentFactoryResolver, ComponentFactory, ComponentRef, NgModuleFactory, ɵcmf, ɵmod, ɵmpd, ɵregisterModuleFactory, Injector, ViewEncapsulation, ChangeDetectionStrategy, SecurityContext, LOCALE_ID, TRANSLATIONS_FORMAT, ɵinlineInterpolate, ɵinterpolate, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵvid, ɵeld, ɵand, ɵted, ɵdid, ɵprd, ɵqud, ɵpad, ɵpod, ɵppd, ɵpid, ɵnov, ɵncd, ɵcrt, ɵccf, InjectionToken, PACKAGE_ROOT_URL, Compiler, ɵConsole, MissingTranslationStrategy, Optional, Inject, TRANSLATIONS, isDevMode, createPlatformFactory, platformCore, COMPILER_OPTIONS, CompilerFactory, Injectable, PLATFORM_ID, ɵglobal, Version } from '@angular/core';\nimport { ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst MODULE_SUFFIX = '';\nconst builtinExternalReferences = createBuiltinExternalReferencesMap();\n\nclass JitReflector {\n  constructor() {\n    this.reflectionCapabilities = new ɵReflectionCapabilities();\n  }\n\n  componentModuleUrl(type, cmpMetadata) {\n    const moduleId = cmpMetadata.moduleId;\n\n    if (typeof moduleId === 'string') {\n      const scheme = getUrlScheme(moduleId);\n      return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n    } else if (moduleId !== null && moduleId !== void 0) {\n      throw syntaxError(`moduleId should be a string in \"${ɵstringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` + `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n    }\n\n    return `./${ɵstringify(type)}`;\n  }\n\n  parameters(typeOrFunc) {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n\n  tryAnnotations(typeOrFunc) {\n    return this.annotations(typeOrFunc);\n  }\n\n  annotations(typeOrFunc) {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n\n  shallowAnnotations(typeOrFunc) {\n    throw new Error('Not supported in JIT mode');\n  }\n\n  propMetadata(typeOrFunc) {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n\n  hasLifecycleHook(type, lcProperty) {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n\n  guards(type) {\n    return this.reflectionCapabilities.guards(type);\n  }\n\n  resolveExternalReference(ref) {\n    return builtinExternalReferences.get(ref) || ref.runtime;\n  }\n\n}\n\nfunction createBuiltinExternalReferencesMap() {\n  const map = new Map();\n  map.set(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, ANALYZE_FOR_ENTRY_COMPONENTS);\n  map.set(Identifiers.ElementRef, ElementRef);\n  map.set(Identifiers.NgModuleRef, NgModuleRef);\n  map.set(Identifiers.ViewContainerRef, ViewContainerRef);\n  map.set(Identifiers.ChangeDetectorRef, ChangeDetectorRef);\n  map.set(Identifiers.Renderer2, Renderer2);\n  map.set(Identifiers.QueryList, QueryList);\n  map.set(Identifiers.TemplateRef, TemplateRef);\n  map.set(Identifiers.CodegenComponentFactoryResolver, ɵCodegenComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactoryResolver, ComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactory, ComponentFactory);\n  map.set(Identifiers.ComponentRef, ComponentRef);\n  map.set(Identifiers.NgModuleFactory, NgModuleFactory);\n  map.set(Identifiers.createModuleFactory, ɵcmf);\n  map.set(Identifiers.moduleDef, ɵmod);\n  map.set(Identifiers.moduleProviderDef, ɵmpd);\n  map.set(Identifiers.RegisterModuleFactoryFn, ɵregisterModuleFactory);\n  map.set(Identifiers.Injector, Injector);\n  map.set(Identifiers.ViewEncapsulation, ViewEncapsulation);\n  map.set(Identifiers.ChangeDetectionStrategy, ChangeDetectionStrategy);\n  map.set(Identifiers.SecurityContext, SecurityContext);\n  map.set(Identifiers.LOCALE_ID, LOCALE_ID);\n  map.set(Identifiers.TRANSLATIONS_FORMAT, TRANSLATIONS_FORMAT);\n  map.set(Identifiers.inlineInterpolate, ɵinlineInterpolate);\n  map.set(Identifiers.interpolate, ɵinterpolate);\n  map.set(Identifiers.EMPTY_ARRAY, ɵEMPTY_ARRAY);\n  map.set(Identifiers.EMPTY_MAP, ɵEMPTY_MAP);\n  map.set(Identifiers.viewDef, ɵvid);\n  map.set(Identifiers.elementDef, ɵeld);\n  map.set(Identifiers.anchorDef, ɵand);\n  map.set(Identifiers.textDef, ɵted);\n  map.set(Identifiers.directiveDef, ɵdid);\n  map.set(Identifiers.providerDef, ɵprd);\n  map.set(Identifiers.queryDef, ɵqud);\n  map.set(Identifiers.pureArrayDef, ɵpad);\n  map.set(Identifiers.pureObjectDef, ɵpod);\n  map.set(Identifiers.purePipeDef, ɵppd);\n  map.set(Identifiers.pipeDef, ɵpid);\n  map.set(Identifiers.nodeValue, ɵnov);\n  map.set(Identifiers.ngContentDef, ɵncd);\n  map.set(Identifiers.createRendererType2, ɵcrt);\n  map.set(Identifiers.createComponentFactory, ɵccf);\n  return map;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\n\nconst DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\nconst _NO_RESOURCE_LOADER = {\n  get(url) {\n    throw new Error(`No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);\n  }\n\n};\nconst baseHtmlParser = new InjectionToken('HtmlParser');\n\nclass CompilerImpl {\n  constructor(injector, _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console) {\n    this._metadataResolver = _metadataResolver;\n    this._delegate = new JitCompiler(_metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console, this.getExtraNgModuleProviders.bind(this));\n    this.injector = injector;\n  }\n\n  getExtraNgModuleProviders() {\n    return [this._metadataResolver.getProviderMetadata(new ProviderMeta(Compiler, {\n      useValue: this\n    }))];\n  }\n\n  compileModuleSync(moduleType) {\n    return this._delegate.compileModuleSync(moduleType);\n  }\n\n  compileModuleAsync(moduleType) {\n    return this._delegate.compileModuleAsync(moduleType);\n  }\n\n  compileModuleAndAllComponentsSync(moduleType) {\n    const result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n\n    return {\n      ngModuleFactory: result.ngModuleFactory,\n      componentFactories: result.componentFactories\n    };\n  }\n\n  compileModuleAndAllComponentsAsync(moduleType) {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType).then(result => ({\n      ngModuleFactory: result.ngModuleFactory,\n      componentFactories: result.componentFactories\n    }));\n  }\n\n  loadAotSummaries(summaries) {\n    this._delegate.loadAotSummaries(summaries);\n  }\n\n  hasAotSummary(ref) {\n    return this._delegate.hasAotSummary(ref);\n  }\n\n  getComponentFactory(component) {\n    return this._delegate.getComponentFactory(component);\n  }\n\n  clearCache() {\n    this._delegate.clearCache();\n  }\n\n  clearCacheFor(type) {\n    this._delegate.clearCacheFor(type);\n  }\n\n  getModuleId(moduleType) {\n    const meta = this._metadataResolver.getNgModuleMetadata(moduleType);\n\n    return meta && meta.id || undefined;\n  }\n\n}\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\n\n\nconst COMPILER_PROVIDERS__PRE_R3__ = [{\n  provide: CompileReflector,\n  useValue: new JitReflector()\n}, {\n  provide: ResourceLoader,\n  useValue: _NO_RESOURCE_LOADER\n}, {\n  provide: JitSummaryResolver,\n  deps: []\n}, {\n  provide: SummaryResolver,\n  useExisting: JitSummaryResolver\n}, {\n  provide: ɵConsole,\n  deps: []\n}, {\n  provide: Lexer,\n  deps: []\n}, {\n  provide: Parser,\n  deps: [Lexer]\n}, {\n  provide: baseHtmlParser,\n  useClass: HtmlParser,\n  deps: []\n}, {\n  provide: I18NHtmlParser,\n  useFactory: (parser, translations, format, config, console) => {\n    translations = translations || '';\n    const missingTranslation = translations ? config.missingTranslation : MissingTranslationStrategy.Ignore;\n    return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n  },\n  deps: [baseHtmlParser, [new Optional(), new Inject(TRANSLATIONS)], [new Optional(), new Inject(TRANSLATIONS_FORMAT)], [CompilerConfig], [ɵConsole]]\n}, {\n  provide: HtmlParser,\n  useExisting: I18NHtmlParser\n}, {\n  provide: TemplateParser,\n  deps: [CompilerConfig, CompileReflector, Parser, ElementSchemaRegistry, I18NHtmlParser, ɵConsole]\n}, {\n  provide: JitEvaluator,\n  useClass: JitEvaluator,\n  deps: []\n}, {\n  provide: DirectiveNormalizer,\n  deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]\n}, {\n  provide: CompileMetadataResolver,\n  deps: [CompilerConfig, HtmlParser, NgModuleResolver, DirectiveResolver, PipeResolver, SummaryResolver, ElementSchemaRegistry, DirectiveNormalizer, ɵConsole, [Optional, StaticSymbolCache], CompileReflector, [Optional, ERROR_COLLECTOR_TOKEN]]\n}, DEFAULT_PACKAGE_URL_PROVIDER, {\n  provide: StyleCompiler,\n  deps: [UrlResolver]\n}, {\n  provide: ViewCompiler,\n  deps: [CompileReflector]\n}, {\n  provide: NgModuleCompiler,\n  deps: [CompileReflector]\n}, {\n  provide: CompilerConfig,\n  useValue: new CompilerConfig()\n}, {\n  provide: Compiler,\n  useClass: CompilerImpl,\n  deps: [Injector, CompileMetadataResolver, TemplateParser, StyleCompiler, ViewCompiler, NgModuleCompiler, SummaryResolver, CompileReflector, JitEvaluator, CompilerConfig, ɵConsole]\n}, {\n  provide: DomElementSchemaRegistry,\n  deps: []\n}, {\n  provide: ElementSchemaRegistry,\n  useExisting: DomElementSchemaRegistry\n}, {\n  provide: UrlResolver,\n  deps: [PACKAGE_ROOT_URL]\n}, {\n  provide: DirectiveResolver,\n  deps: [CompileReflector]\n}, {\n  provide: PipeResolver,\n  deps: [CompileReflector]\n}, {\n  provide: NgModuleResolver,\n  deps: [CompileReflector]\n}];\nconst COMPILER_PROVIDERS__POST_R3__ = [{\n  provide: Compiler,\n  useFactory: () => new Compiler()\n}];\nconst COMPILER_PROVIDERS = COMPILER_PROVIDERS__POST_R3__;\n/**\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\n\nclass JitCompilerFactory {\n  /* @internal */\n  constructor(defaultOptions) {\n    const compilerOptions = {\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning\n    };\n    this._defaultOptions = [compilerOptions, ...defaultOptions];\n  }\n\n  createCompiler(options = []) {\n    const opts = _mergeOptions(this._defaultOptions.concat(options));\n\n    const injector = Injector.create([COMPILER_PROVIDERS, {\n      provide: CompilerConfig,\n      useFactory: () => {\n        return new CompilerConfig({\n          // let explicit values from the compiler options overwrite options\n          // from the app providers\n          useJit: opts.useJit,\n          jitDevMode: isDevMode(),\n          // let explicit values from the compiler options overwrite options\n          // from the app providers\n          defaultEncapsulation: opts.defaultEncapsulation,\n          missingTranslation: opts.missingTranslation,\n          preserveWhitespaces: opts.preserveWhitespaces\n        });\n      },\n      deps: []\n    }, opts.providers]);\n    return injector.get(Compiler);\n  }\n\n}\n\nfunction _mergeOptions(optionsArr) {\n  return {\n    useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => options.providers)),\n    missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n    preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces))\n  };\n}\n\nfunction _lastDefined(args) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n\n  return undefined;\n}\n\nfunction _mergeArrays(parts) {\n  const result = [];\n  parts.forEach(part => part && result.push(...part));\n  return result;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\n\n\nconst platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [{\n  provide: COMPILER_OPTIONS,\n  useValue: {},\n  multi: true\n}, {\n  provide: CompilerFactory,\n  useClass: JitCompilerFactory,\n  deps: [COMPILER_OPTIONS]\n}]);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass ResourceLoaderImpl extends ResourceLoader {\n  get(url) {\n    let resolve;\n    let reject;\n    const promise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function () {\n      // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n      // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n      // by IE10)\n      const response = xhr.response || xhr.responseText; // normalize IE9 bug (https://bugs.jquery.com/ticket/1450)\n\n      let status = xhr.status === 1223 ? 204 : xhr.status; // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n\n      if (status === 0) {\n        status = response ? 200 : 0;\n      }\n\n      if (200 <= status && status <= 300) {\n        resolve(response);\n      } else {\n        reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function () {\n      reject(`Failed to load ${url}`);\n    };\n\n    xhr.send();\n    return promise;\n  }\n\n}\n\nResourceLoaderImpl.ɵfac = /* @__PURE__ */function () {\n  let ɵResourceLoaderImpl_BaseFactory;\n  return function ResourceLoaderImpl_Factory(t) {\n    return (ɵResourceLoaderImpl_BaseFactory || (ɵResourceLoaderImpl_BaseFactory = i0.ɵɵgetInheritedFactory(ResourceLoaderImpl)))(t || ResourceLoaderImpl);\n  };\n}();\n\nResourceLoaderImpl.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ResourceLoaderImpl,\n  factory: ResourceLoaderImpl.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResourceLoaderImpl, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nconst INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, {\n  provide: COMPILER_OPTIONS,\n  useValue: {\n    providers: [{\n      provide: ResourceLoader,\n      useClass: ResourceLoaderImpl,\n      deps: []\n    }]\n  },\n  multi: true\n}, {\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\n\nclass CachedResourceLoader extends ResourceLoader {\n  constructor() {\n    super();\n    this._cache = ɵglobal.$templateCache;\n\n    if (this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n  }\n\n  get(url) {\n    if (this._cache.hasOwnProperty(url)) {\n      return Promise.resolve(this._cache[url]);\n    } else {\n      return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n    }\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nconst VERSION = new Version('13.0.2');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\nconst RESOURCE_CACHE_PROVIDER = [{\n  provide: ResourceLoader,\n  useClass: CachedResourceLoader,\n  deps: []\n}];\n/**\n * @publicApi\n */\n\nconst platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JitCompilerFactory, RESOURCE_CACHE_PROVIDER, VERSION, platformBrowserDynamic, COMPILER_PROVIDERS__POST_R3__ as ɵCOMPILER_PROVIDERS__POST_R3__, CompilerImpl as ɵCompilerImpl, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, ResourceLoaderImpl as ɵResourceLoaderImpl, platformCoreDynamic as ɵplatformCoreDynamic };","map":{"version":3,"sources":["E:/skote-admin/Starterkit/node_modules/@angular/platform-browser-dynamic/fesm2020/platform-browser-dynamic.mjs"],"names":["getUrlScheme","syntaxError","Identifiers","JitCompiler","ProviderMeta","CompileReflector","ResourceLoader","JitSummaryResolver","SummaryResolver","Lexer","Parser","HtmlParser","I18NHtmlParser","CompilerConfig","TemplateParser","ElementSchemaRegistry","JitEvaluator","DirectiveNormalizer","UrlResolver","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","StaticSymbolCache","StyleCompiler","ViewCompiler","NgModuleCompiler","DomElementSchemaRegistry","i0","ɵReflectionCapabilities","ɵstringify","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","NgModuleRef","ViewContainerRef","ChangeDetectorRef","Renderer2","QueryList","TemplateRef","ɵCodegenComponentFactoryResolver","ComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","ɵcmf","ɵmod","ɵmpd","ɵregisterModuleFactory","Injector","ViewEncapsulation","ChangeDetectionStrategy","SecurityContext","LOCALE_ID","TRANSLATIONS_FORMAT","ɵinlineInterpolate","ɵinterpolate","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵvid","ɵeld","ɵand","ɵted","ɵdid","ɵprd","ɵqud","ɵpad","ɵpod","ɵppd","ɵpid","ɵnov","ɵncd","ɵcrt","ɵccf","InjectionToken","PACKAGE_ROOT_URL","Compiler","ɵConsole","MissingTranslationStrategy","Optional","Inject","TRANSLATIONS","isDevMode","createPlatformFactory","platformCore","COMPILER_OPTIONS","CompilerFactory","Injectable","PLATFORM_ID","ɵglobal","Version","ɵPLATFORM_BROWSER_ID","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","MODULE_SUFFIX","builtinExternalReferences","createBuiltinExternalReferencesMap","JitReflector","constructor","reflectionCapabilities","componentModuleUrl","type","cmpMetadata","moduleId","scheme","parameters","typeOrFunc","tryAnnotations","annotations","shallowAnnotations","Error","propMetadata","hasLifecycleHook","lcProperty","guards","resolveExternalReference","ref","get","runtime","map","Map","set","CodegenComponentFactoryResolver","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","viewDef","elementDef","anchorDef","textDef","directiveDef","providerDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","createComponentFactory","ERROR_COLLECTOR_TOKEN","DEFAULT_PACKAGE_URL_PROVIDER","provide","useValue","_NO_RESOURCE_LOADER","url","baseHtmlParser","CompilerImpl","injector","_metadataResolver","templateParser","styleCompiler","viewCompiler","ngModuleCompiler","summaryResolver","compileReflector","jitEvaluator","compilerConfig","console","_delegate","getExtraNgModuleProviders","bind","getProviderMetadata","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","result","ngModuleFactory","componentFactories","compileModuleAndAllComponentsAsync","then","loadAotSummaries","summaries","hasAotSummary","getComponentFactory","component","clearCache","clearCacheFor","getModuleId","meta","getNgModuleMetadata","id","undefined","COMPILER_PROVIDERS__PRE_R3__","deps","useExisting","useClass","useFactory","parser","translations","format","config","missingTranslation","Ignore","COMPILER_PROVIDERS__POST_R3__","COMPILER_PROVIDERS","JitCompilerFactory","defaultOptions","compilerOptions","useJit","defaultEncapsulation","Emulated","Warning","_defaultOptions","createCompiler","options","opts","_mergeOptions","concat","create","jitDevMode","preserveWhitespaces","providers","optionsArr","_lastDefined","_mergeArrays","args","i","length","parts","forEach","part","push","platformCoreDynamic","multi","ResourceLoaderImpl","resolve","reject","promise","Promise","res","rej","xhr","XMLHttpRequest","open","responseType","onload","response","responseText","status","onerror","send","ɵfac","ɵprov","INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","CachedResourceLoader","_cache","$templateCache","hasOwnProperty","VERSION","RESOURCE_CACHE_PROVIDER","platformBrowserDynamic","ɵCOMPILER_PROVIDERS__POST_R3__","ɵCompilerImpl","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","ɵResourceLoaderImpl","ɵplatformCoreDynamic"],"mappings":"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","sourcesContent":["/**\n * @license Angular v13.0.2\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { getUrlScheme, syntaxError, Identifiers, JitCompiler, ProviderMeta, CompileReflector, ResourceLoader, JitSummaryResolver, SummaryResolver, Lexer, Parser, HtmlParser, I18NHtmlParser, CompilerConfig, TemplateParser, ElementSchemaRegistry, JitEvaluator, DirectiveNormalizer, UrlResolver, CompileMetadataResolver, NgModuleResolver, DirectiveResolver, PipeResolver, StaticSymbolCache, StyleCompiler, ViewCompiler, NgModuleCompiler, DomElementSchemaRegistry } from '@angular/compiler';\nimport * as i0 from '@angular/core';\nimport { ɵReflectionCapabilities, ɵstringify, ANALYZE_FOR_ENTRY_COMPONENTS, ElementRef, NgModuleRef, ViewContainerRef, ChangeDetectorRef, Renderer2, QueryList, TemplateRef, ɵCodegenComponentFactoryResolver, ComponentFactoryResolver, ComponentFactory, ComponentRef, NgModuleFactory, ɵcmf, ɵmod, ɵmpd, ɵregisterModuleFactory, Injector, ViewEncapsulation, ChangeDetectionStrategy, SecurityContext, LOCALE_ID, TRANSLATIONS_FORMAT, ɵinlineInterpolate, ɵinterpolate, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵvid, ɵeld, ɵand, ɵted, ɵdid, ɵprd, ɵqud, ɵpad, ɵpod, ɵppd, ɵpid, ɵnov, ɵncd, ɵcrt, ɵccf, InjectionToken, PACKAGE_ROOT_URL, Compiler, ɵConsole, MissingTranslationStrategy, Optional, Inject, TRANSLATIONS, isDevMode, createPlatformFactory, platformCore, COMPILER_OPTIONS, CompilerFactory, Injectable, PLATFORM_ID, ɵglobal, Version } from '@angular/core';\nimport { ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MODULE_SUFFIX = '';\nconst builtinExternalReferences = createBuiltinExternalReferencesMap();\nclass JitReflector {\n    constructor() {\n        this.reflectionCapabilities = new ɵReflectionCapabilities();\n    }\n    componentModuleUrl(type, cmpMetadata) {\n        const moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            const scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(`moduleId should be a string in \"${ɵstringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n                `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n        }\n        return `./${ɵstringify(type)}`;\n    }\n    parameters(typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n    tryAnnotations(typeOrFunc) {\n        return this.annotations(typeOrFunc);\n    }\n    annotations(typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n    shallowAnnotations(typeOrFunc) {\n        throw new Error('Not supported in JIT mode');\n    }\n    propMetadata(typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n    hasLifecycleHook(type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    }\n    guards(type) {\n        return this.reflectionCapabilities.guards(type);\n    }\n    resolveExternalReference(ref) {\n        return builtinExternalReferences.get(ref) || ref.runtime;\n    }\n}\nfunction createBuiltinExternalReferencesMap() {\n    const map = new Map();\n    map.set(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, ANALYZE_FOR_ENTRY_COMPONENTS);\n    map.set(Identifiers.ElementRef, ElementRef);\n    map.set(Identifiers.NgModuleRef, NgModuleRef);\n    map.set(Identifiers.ViewContainerRef, ViewContainerRef);\n    map.set(Identifiers.ChangeDetectorRef, ChangeDetectorRef);\n    map.set(Identifiers.Renderer2, Renderer2);\n    map.set(Identifiers.QueryList, QueryList);\n    map.set(Identifiers.TemplateRef, TemplateRef);\n    map.set(Identifiers.CodegenComponentFactoryResolver, ɵCodegenComponentFactoryResolver);\n    map.set(Identifiers.ComponentFactoryResolver, ComponentFactoryResolver);\n    map.set(Identifiers.ComponentFactory, ComponentFactory);\n    map.set(Identifiers.ComponentRef, ComponentRef);\n    map.set(Identifiers.NgModuleFactory, NgModuleFactory);\n    map.set(Identifiers.createModuleFactory, ɵcmf);\n    map.set(Identifiers.moduleDef, ɵmod);\n    map.set(Identifiers.moduleProviderDef, ɵmpd);\n    map.set(Identifiers.RegisterModuleFactoryFn, ɵregisterModuleFactory);\n    map.set(Identifiers.Injector, Injector);\n    map.set(Identifiers.ViewEncapsulation, ViewEncapsulation);\n    map.set(Identifiers.ChangeDetectionStrategy, ChangeDetectionStrategy);\n    map.set(Identifiers.SecurityContext, SecurityContext);\n    map.set(Identifiers.LOCALE_ID, LOCALE_ID);\n    map.set(Identifiers.TRANSLATIONS_FORMAT, TRANSLATIONS_FORMAT);\n    map.set(Identifiers.inlineInterpolate, ɵinlineInterpolate);\n    map.set(Identifiers.interpolate, ɵinterpolate);\n    map.set(Identifiers.EMPTY_ARRAY, ɵEMPTY_ARRAY);\n    map.set(Identifiers.EMPTY_MAP, ɵEMPTY_MAP);\n    map.set(Identifiers.viewDef, ɵvid);\n    map.set(Identifiers.elementDef, ɵeld);\n    map.set(Identifiers.anchorDef, ɵand);\n    map.set(Identifiers.textDef, ɵted);\n    map.set(Identifiers.directiveDef, ɵdid);\n    map.set(Identifiers.providerDef, ɵprd);\n    map.set(Identifiers.queryDef, ɵqud);\n    map.set(Identifiers.pureArrayDef, ɵpad);\n    map.set(Identifiers.pureObjectDef, ɵpod);\n    map.set(Identifiers.purePipeDef, ɵppd);\n    map.set(Identifiers.pipeDef, ɵpid);\n    map.set(Identifiers.nodeValue, ɵnov);\n    map.set(Identifiers.ngContentDef, ɵncd);\n    map.set(Identifiers.createRendererType2, ɵcrt);\n    map.set(Identifiers.createComponentFactory, ɵccf);\n    return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nconst DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: PACKAGE_ROOT_URL,\n    useValue: '/'\n};\nconst _NO_RESOURCE_LOADER = {\n    get(url) {\n        throw new Error(`No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);\n    }\n};\nconst baseHtmlParser = new InjectionToken('HtmlParser');\nclass CompilerImpl {\n    constructor(injector, _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console) {\n        this._metadataResolver = _metadataResolver;\n        this._delegate = new JitCompiler(_metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console, this.getExtraNgModuleProviders.bind(this));\n        this.injector = injector;\n    }\n    getExtraNgModuleProviders() {\n        return [this._metadataResolver.getProviderMetadata(new ProviderMeta(Compiler, { useValue: this }))];\n    }\n    compileModuleSync(moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    }\n    compileModuleAsync(moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    }\n    compileModuleAndAllComponentsSync(moduleType) {\n        const result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n        return {\n            ngModuleFactory: result.ngModuleFactory,\n            componentFactories: result.componentFactories,\n        };\n    }\n    compileModuleAndAllComponentsAsync(moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType)\n            .then((result) => ({\n            ngModuleFactory: result.ngModuleFactory,\n            componentFactories: result.componentFactories,\n        }));\n    }\n    loadAotSummaries(summaries) {\n        this._delegate.loadAotSummaries(summaries);\n    }\n    hasAotSummary(ref) {\n        return this._delegate.hasAotSummary(ref);\n    }\n    getComponentFactory(component) {\n        return this._delegate.getComponentFactory(component);\n    }\n    clearCache() {\n        this._delegate.clearCache();\n    }\n    clearCacheFor(type) {\n        this._delegate.clearCacheFor(type);\n    }\n    getModuleId(moduleType) {\n        const meta = this._metadataResolver.getNgModuleMetadata(moduleType);\n        return meta && meta.id || undefined;\n    }\n}\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nconst COMPILER_PROVIDERS__PRE_R3__ = [\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    { provide: JitSummaryResolver, deps: [] },\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    { provide: ɵConsole, deps: [] },\n    { provide: Lexer, deps: [] },\n    { provide: Parser, deps: [Lexer] },\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n        deps: [],\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: (parser, translations, format, config, console) => {\n            translations = translations || '';\n            const missingTranslation = translations ? config.missingTranslation : MissingTranslationStrategy.Ignore;\n            return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n        deps: [\n            baseHtmlParser,\n            [new Optional(), new Inject(TRANSLATIONS)],\n            [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [ɵConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    {\n        provide: TemplateParser,\n        deps: [CompilerConfig, CompileReflector, Parser, ElementSchemaRegistry, I18NHtmlParser, ɵConsole]\n    },\n    { provide: JitEvaluator, useClass: JitEvaluator, deps: [] },\n    { provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig] },\n    {\n        provide: CompileMetadataResolver,\n        deps: [\n            CompilerConfig, HtmlParser, NgModuleResolver, DirectiveResolver, PipeResolver,\n            SummaryResolver, ElementSchemaRegistry, DirectiveNormalizer, ɵConsole,\n            [Optional, StaticSymbolCache], CompileReflector, [Optional, ERROR_COLLECTOR_TOKEN]\n        ]\n    },\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    { provide: StyleCompiler, deps: [UrlResolver] },\n    { provide: ViewCompiler, deps: [CompileReflector] },\n    { provide: NgModuleCompiler, deps: [CompileReflector] },\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    {\n        provide: Compiler,\n        useClass: CompilerImpl,\n        deps: [\n            Injector, CompileMetadataResolver, TemplateParser, StyleCompiler, ViewCompiler,\n            NgModuleCompiler, SummaryResolver, CompileReflector, JitEvaluator, CompilerConfig, ɵConsole\n        ]\n    },\n    { provide: DomElementSchemaRegistry, deps: [] },\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    { provide: UrlResolver, deps: [PACKAGE_ROOT_URL] },\n    { provide: DirectiveResolver, deps: [CompileReflector] },\n    { provide: PipeResolver, deps: [CompileReflector] },\n    { provide: NgModuleResolver, deps: [CompileReflector] },\n];\nconst COMPILER_PROVIDERS__POST_R3__ = [{ provide: Compiler, useFactory: () => new Compiler() }];\nconst COMPILER_PROVIDERS = COMPILER_PROVIDERS__POST_R3__;\n/**\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\nclass JitCompilerFactory {\n    /* @internal */\n    constructor(defaultOptions) {\n        const compilerOptions = {\n            useJit: true,\n            defaultEncapsulation: ViewEncapsulation.Emulated,\n            missingTranslation: MissingTranslationStrategy.Warning,\n        };\n        this._defaultOptions = [compilerOptions, ...defaultOptions];\n    }\n    createCompiler(options = []) {\n        const opts = _mergeOptions(this._defaultOptions.concat(options));\n        const injector = Injector.create([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: () => {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        jitDevMode: isDevMode(),\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        preserveWhitespaces: opts.preserveWhitespaces,\n                    });\n                },\n                deps: []\n            },\n            opts.providers\n        ]);\n        return injector.get(Compiler);\n    }\n}\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n        defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n        providers: _mergeArrays(optionsArr.map(options => options.providers)),\n        missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n        preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n    };\n}\nfunction _lastDefined(args) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\nfunction _mergeArrays(parts) {\n    const result = [];\n    parts.forEach((part) => part && result.push(...part));\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\nconst platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n    { provide: COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS] },\n]);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ResourceLoaderImpl extends ResourceLoader {\n    get(url) {\n        let resolve;\n        let reject;\n        const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'text';\n        xhr.onload = function () {\n            // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n            // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n            // by IE10)\n            const response = xhr.response || xhr.responseText;\n            // normalize IE9 bug (https://bugs.jquery.com/ticket/1450)\n            let status = xhr.status === 1223 ? 204 : xhr.status;\n            // fix status code when it is 0 (0 status is undocumented).\n            // Occurs when accessing file resources or on Android 4.1 stock browser\n            // while retrieving files from application cache.\n            if (status === 0) {\n                status = response ? 200 : 0;\n            }\n            if (200 <= status && status <= 300) {\n                resolve(response);\n            }\n            else {\n                reject(`Failed to load ${url}`);\n            }\n        };\n        xhr.onerror = function () {\n            reject(`Failed to load ${url}`);\n        };\n        xhr.send();\n        return promise;\n    }\n}\nResourceLoaderImpl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ResourceLoaderImpl, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nResourceLoaderImpl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ResourceLoaderImpl });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: ResourceLoaderImpl, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n    ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,\n    {\n        provide: COMPILER_OPTIONS,\n        useValue: { providers: [{ provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: [] }] },\n        multi: true\n    },\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\nclass CachedResourceLoader extends ResourceLoader {\n    constructor() {\n        super();\n        this._cache = ɵglobal.$templateCache;\n        if (this._cache == null) {\n            throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n        }\n    }\n    get(url) {\n        if (this._cache.hasOwnProperty(url)) {\n            return Promise.resolve(this._cache[url]);\n        }\n        else {\n            return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('13.0.2');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst RESOURCE_CACHE_PROVIDER = [{ provide: ResourceLoader, useClass: CachedResourceLoader, deps: [] }];\n/**\n * @publicApi\n */\nconst platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JitCompilerFactory, RESOURCE_CACHE_PROVIDER, VERSION, platformBrowserDynamic, COMPILER_PROVIDERS__POST_R3__ as ɵCOMPILER_PROVIDERS__POST_R3__, CompilerImpl as ɵCompilerImpl, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, ResourceLoaderImpl as ɵResourceLoaderImpl, platformCoreDynamic as ɵplatformCoreDynamic };\n"]},"metadata":{},"sourceType":"module"}